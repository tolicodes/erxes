version: "2.1"
services:
  mongo:
    hostname: mongo
    image: mongo
    container_name: mongo
    ports:
      - "127.0.0.1:27017:27017"
    healthcheck:
      test: echo 'db.stats().ok' | mongo localhost:27017/test --quiet
      interval: 2s
      timeout: 2s
      retries: 200
    networks:
      - erxes-net
    volumes:
      - ./data/db:/data/db
    command: "--bind_ip_all"

  redis:
    image: "redis"
    container_name: redis
    ports:
      - "127.0.0.1:6379:6379"
    healthcheck:
      timeout: 2s
      interval: 2s
      retries: 200
      test:
        - "CMD"
        - "bash"
        - "-c"
        - "exec 3<> /dev/tcp/127.0.0.1/6379 && echo PING >&3 && head -1 <&3 | grep PONG"
    networks:
      - erxes-net

  rabbitmq:
    image: rabbitmq:3.7.17-management
    container_name: rabbitmq
    restart: unless-stopped
    hostname: rabbitmq
    healthcheck:
      timeout: 2s
      interval: 2s
      retries: 200
      test:
        - "CMD"
        - "rabbitmqctl"
        - "status"
    ports:
      - "127.0.0.1:15672:15672"
    networks:
      - erxes-net
    # RabbitMQ data will be saved into ./rabbitmq-data folder.
    volumes:
      - ./rabbitmq-data:/var/lib/rabbitmq

  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.5.2"
    container_name: "elasticsearch"
    environment:
      - discovery.type=single-node
    ports:
      - "127.0.0.1:9200:9200"
    networks:
      - erxes-net
    volumes:
      - ./elasticsearchData:/usr/share/elasticsearch/data

  kibana:
    image: "docker.elastic.co/kibana/kibana:7.5.2"
    container_name: "kibana"
    ports:
      - "127.0.0.1:5601:5601"
    networks:
      - erxes-net

  # elksyncer:
  #   image: "erxes/erxes-elksyncer:0.16.2"
  #   container_name: "elksyncer"
  #   env_file: ../erxes-api/elkSyncer/.env
  #   depends_on:
  #     - "mongo"
  #     - "elasticsearch"
  #   volumes:
  #     - ../erxes-api/elkSyncer:/elkSyncer
  #   command: bash -c "./wait-for.sh -t 60 mongo:27017 && ./wait-for.sh -t 60 elasticsearch:9200 && python main.py"
  #   networks:
  #     - erxes-net
  erxes-api:
    container_name: "erxes-api"
    build:
      dockerfile: ./Dockerfile.dev
      context: ../erxes-api
    volumes:
      - /erxes-api/node_modules
      - /erxes-api/.git
      - ../erxes-api/:/erxes-api
    env_file: ../erxes-api/.env
    depends_on:
      mongo:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "3300:3300"
    networks:
      - erxes-net
  # erxes-ui:
  #   image: erxes/erxes:0.14.1
  #   container_name: erxes
  #   restart: unless-stopped
  #   build:
  #     dockerfile: ./Dockerfile.dev
  #     context: ../erxes/ui/
  #   volumes:
  #     - /erxes/ui/node_modules
  #     - /erxes/ui/.git
  #     - ../erxes/ui/:/erxes/ui
  #   env_file: ../erxes-api/.env
  #   ports:
  #     - "3000:3000"
  #   networks:
  #     - erxes-net
  # erxes-crons:
  #   image: erxes/erxes-api:0.14.1
  #   container_name: erxes-crons
  #   entrypoint: ["node", "--max_old_space_size=8192", "dist/cronJobs"]
  #   restart: unless-stopped
  #   environment:
  #     # erxes-crons
  #     PORT_CRONS: "3600"
  #     NODE_ENV: production
  #     PROCESS_NAME: crons
  #     DEBUG: "erxes-crons:*"
  #     # MongoDB
  #     MONGO_URL: mongodb://mongo/erxes
  #     # Redis
  #     REDIS_HOST: redis
  #     REDIS_PORT: "6379"
  #     REDIS_PASSWORD: ""
  #     # RabbitMQ
  #     RABBITMQ_HOST: "amqp://guest:guest@rabbitmq:5672/erxes"
  #   depends_on:
  #     mongo:
  #       condition: service_healthy
  #     rabbitmq:
  #       condition: service_healthy
  #   networks:
  #     - erxes-net
  # erxes-workers:
  #   image: erxes/erxes-api:0.14.1
  #   container_name: erxes-workers
  #   entrypoint:
  #     [
  #       "node",
  #       "--max_old_space_size=8192",
  #       "--experimental-worker",
  #       "dist/workers",
  #     ]
  #   restart: unless-stopped
  #   environment:
  #     # erxes-workers
  #     PORT_WORKERS: "3700"
  #     JWT_TOKEN_SECRET: token
  #     NODE_ENV: production
  #     DEBUG: "erxes-workers:*"
  #     # MongoDB
  #     MONGO_URL: mongodb://mongo/erxes
  #     # Redis
  #     REDIS_HOST: redis
  #     REDIS_PORT: "6379"
  #     REDIS_PASSWORD: ""
  #     # RabbitMQ
  #     RABBITMQ_HOST: "amqp://guest:guest@rabbitmq:5672/erxes"
  #   depends_on:
  #     mongo:
  #       condition: service_healthy
  #     rabbitmq:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   networks:
  #     - erxes-net
  # erxes-widgets:
  #   image: erxes/erxes-widgets:0.14.1
  #   container_name: erxes-widgets
  #   restart: unless-stopped
  #   environment:
  #     # erxes-widgets
  #     PORT: "3200"
  #     ROOT_URL: http://localhost:3200
  #     API_URL: http://localhost:3300
  #     API_SUBSCRIPTIONS_URL: ws://localhost:3300/subscriptions
  #   ports:
  #     - "3200:3200"
  #   networks:
  #     - erxes-net
  # erxes-integrations:
  #   image: erxes/erxes-integrations:0.10.3
  #   container_name: erxes-integrations
  #   restart: unless-stopped
  #   environment:
  #     PORT: "3400"
  #     NODE_ENV: production
  #     DEBUG: "erxes-integrations:*"
  #     # public urls
  #     DOMAIN: http://localhost:3400
  #     MAIN_APP_DOMAIN: http://localhost:3000
  #     MAIN_API_DOMAIN: http://localhost:3300
  #     # non public urls
  #     # MongoDB
  #     MONGO_URL: mongodb://mongo/erxes_integrations
  #     # RabbitMQ
  #     RABBITMQ_HOST: "amqp://guest:guest@rabbitmq:5672/erxes"
  #     # Redis
  #     REDIS_HOST: redis
  #     REDIS_PORT: "6379"
  #     REDIS_PASSWORD: ""
  #   ports:
  #     - "3400:3400"
  #   depends_on:
  #     mongo:
  #       condition: service_healthy
  #     rabbitmq:
  #       condition: service_healthy
  #   networks:
  #     - erxes-net
  # erxes-logger:
  #   image: erxes/erxes-logger:0.10.0
  #   container_name: erxes-logger
  #   restart: unless-stopped
  #   environment:
  #     PORT: "3800"
  #     DEBUG: "erxes-logs:*"
  #     # MongoDB
  #     MONGO_URL: mongodb://mongo/erxes_logs
  #     # RabbitMQ
  #     RABBITMQ_HOST: "amqp://guest:guest@rabbitmq:5672/erxes"
  #   depends_on:
  #     mongo:
  #       condition: service_healthy
  #   networks:
  #     - erxes-net
  # erxes-engages:
  #   image: erxes/erxes-engages-email-sender:0.10.0
  #   container_name: erxes-engages
  #   restart: unless-stopped
  #   environment:
  #     PORT: "3900"
  #     NODE_ENV: production
  #     DEBUG: "erxes-engages:*"
  #     # public urls
  #     MAIN_API_DOMAIN: http://localhost:3300
  #     # MongoDB
  #     MONGO_URL: mongodb://mongo/erxes_engages
  #     # RabbitMQ
  #     RABBITMQ_HOST: "amqp://guest:guest@rabbitmq:5672/erxes"
  #     # Redis
  #     REDIS_HOST: redis
  #     REDIS_PORT: "6379"
  #     REDIS_PASSWORD: ""
  #   depends_on:
  #     mongo:
  #       condition: service_healthy
  #     rabbitmq:
  #       condition: service_healthy
  #   networks:
  #     - erxes-net
networks:
  erxes-net:
    driver: bridge
